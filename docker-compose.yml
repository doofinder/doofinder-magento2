version: "2.1"

services:

  # Web container
  web:
    image: doofinder-magento2:php-${PHP_VERSION}-composer-${COMPOSER_VERSION}
    build:
      context: docker
      args:
        PHP_VERSION: ${PHP_VERSION}
        COMPOSER_VERSION: ${COMPOSER_VERSION}
      secrets:
        - composer_auth_username
        - composer_auth_password
    depends_on:
      db:
          condition: service_healthy
      elasticsearch:
          condition: service_healthy
    environment:
      MYSQL_HOST: db
      ELASTICSEARCH_HOST: elasticsearch
      MAGENTO_EDITION: ${MAGENTO_EDITION}
      MAGENTO_VERSION: ${MAGENTO_VERSION}
      MAGENTO_BASE_URL: ${MAGENTO_BASE_URL}
      MAGENTO_ADMIN_FRONTNAME: ${MAGENTO_ADMIN_FRONTNAME}
      MAGENTO_ADMIN_FIRST_NAME: ${MAGENTO_ADMIN_FIRST_NAME}
      MAGENTO_ADMIN_LAST_NAME: ${MAGENTO_ADMIN_LAST_NAME}
      MAGENTO_ADMIN_EMAIL: ${MAGENTO_ADMIN_EMAIL}
      MAGENTO_ADMIN_USER: ${MAGENTO_ADMIN_USER}
      MAGENTO_ADMIN_PASSWORD: ${MAGENTO_ADMIN_PASSWORD}
      MAGENTO_LOCALE: ${MAGENTO_LOCALE}
      MAGENTO_CURRENCY: ${MAGENTO_CURRENCY}
      MAGENTO_TIMEZONE: ${MAGENTO_TIMEZONE}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      APACHE_RUN_USER: '#1000'
      APACHE_RUN_GROUP: '#1000'
      WEB_ALIAS_DOMAIN: ${MAGENTO_BASE_URL}
      WEB_DOCUMENT_ROOT: /app/pub
      PHP_MAX_EXECUTION_TIME: 300
      #XDEBUG_CONFIG: "client_host=${XDEBUG_HOST} idekey=${XDEBUG_KEY} mode=develop,debug start_with_request=yes"
    volumes:
      - ./app:/app
      - ./Doofinder:/app/app/code/Doofinder
    ports:
      - "9012:80"
      - "4012:443"
    secrets:
        - composer_auth_username
        - composer_auth_password

  setup:
    image:  doofinder-magento2:php-${PHP_VERSION}-composer-${COMPOSER_VERSION}
    pull_policy: never
    profiles:
      - setup
    environment:
      MAGENTO_EDITION: ${MAGENTO_EDITION}
      MAGENTO_VERSION: ${MAGENTO_VERSION}
    volumes:
      - ./app:/app
      - ~/.composer/cache:/root/.composer/cache
    secrets:
        - composer_auth_username
        - composer_auth_password
    entrypoint: /usr/local/bin/magento_download

  # MySQL container
  db:
    image: mysql:5.7
    volumes:
      - magento-db:/var/lib/mysql
    ports:
      - 3312:3306
    healthcheck:
      test: 'mysqladmin -h localhost -p${MYSQL_PASSWORD} ping --silent'
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  # PhpMyAdmin container
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 8080:80
    links:
      - db

  # Elasticsearch container
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 3

    # Varnish container
    # varnish:
    #   image: varnish:stable
    #   environment:
    #     VARNISH_BACKEND_HOST: web
    #     VARNISH_BACKEND_PORT: 80
    #     VARNISH_STORAGE: "malloc,256m"
    #   ports:
    #     - "9012:80"
    #   depends_on:
    #     - web
    #   volumes:
    #     - ./default.vcl:/etc/varnish/default.vcl
secrets:
  composer_auth_username:
    environment: COMPOSER_AUTH_USERNAME
  composer_auth_password:
    environment: COMPOSER_AUTH_PASSWORD
volumes:
  magento-db:
